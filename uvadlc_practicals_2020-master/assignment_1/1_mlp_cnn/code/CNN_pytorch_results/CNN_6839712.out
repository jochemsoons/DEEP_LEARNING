learning_rate : 0.0001
max_steps : 5000
batch_size : 32
eval_freq : 500
data_dir : ./cifar10/cifar-10-batches-py
Device: cuda
ConvNet(
  (layers): Sequential(
    (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): ResNetBlock(
      (block): Sequential(
        (0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU()
        (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (2): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1))
    (3): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (4): ResNetBlock(
      (block): Sequential(
        (0): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU()
        (2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (5): ResNetBlock(
      (block): Sequential(
        (0): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU()
        (2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (6): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
    (7): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (8): ResNetBlock(
      (block): Sequential(
        (0): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU()
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (9): ResNetBlock(
      (block): Sequential(
        (0): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU()
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (10): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1))
    (11): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (12): ResNetBlock(
      (block): Sequential(
        (0): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU()
        (2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (13): ResNetBlock(
      (block): Sequential(
        (0): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU()
        (2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (14): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (15): ResNetBlock(
      (block): Sequential(
        (0): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU()
        (2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (16): ResNetBlock(
      (block): Sequential(
        (0): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU()
        (2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (17): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (18): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (19): ReLU()
    (20): Flatten()
    (21): Linear(in_features=512, out_features=10, bias=True)
  )
)
STEP 500/5000 | test acc: 0.5956, test loss: 1.1604 | train acc: 0.4801, train loss: 1.5006
STEP 1000/5000 | test acc: 0.6697, test loss: 0.9429 | train acc: 0.6417, train loss: 1.0393
STEP 1500/5000 | test acc: 0.7119, test loss: 0.8222 | train acc: 0.6901, train loss: 0.8861
STEP 2000/5000 | test acc: 0.7555, test loss: 0.7038 | train acc: 0.7651, train loss: 0.6890
STEP 2500/5000 | test acc: 0.7781, test loss: 0.6691 | train acc: 0.7778, train loss: 0.6487
STEP 3000/5000 | test acc: 0.7755, test loss: 0.6535 | train acc: 0.7887, train loss: 0.6086
STEP 3500/5000 | test acc: 0.7900, test loss: 0.6062 | train acc: 0.8448, train loss: 0.4619
STEP 4000/5000 | test acc: 0.8033, test loss: 0.5837 | train acc: 0.8602, train loss: 0.4088
STEP 4500/5000 | test acc: 0.8045, test loss: 0.5667 | train acc: 0.8536, train loss: 0.4287
STEP 5000/5000 | test acc: 0.8163, test loss: 0.5599 | train acc: 0.9060, train loss: 0.2932
